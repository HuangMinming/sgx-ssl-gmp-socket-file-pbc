


/* c_pre.edl */

enclave {
    
    
    
    trusted {
        public int c_pre_main_test();

        public sgx_status_t t_Trusted_Setup([out, size=pk_Length] unsigned char *pk, size_t pk_Length);
        public uint32_t t_get_sealed_keyPairHex_data_size();
        public sgx_status_t t_seal_keyPairHex_data([out, size=data_size] uint8_t* sealed_blob, uint32_t data_size);
        public sgx_status_t t_unseal_keyPairHex_data([in, size=data_size] const uint8_t *sealed_blob, size_t data_size);

        public sgx_status_t t_Dec2(
            [in, size=w_len] uint8_t *w, int w_len, 
            [in, size=c1_Hex_len] uint8_t *c1_Hex, int c1_Hex_len,
            [in, size=c2_Hex_len] uint8_t *c2_Hex, int c2_Hex_len,
            [in, size=c3_Hex_len] uint8_t *c3_Hex, int c3_Hex_len,
            [in, size=c4_Hex_len] uint8_t *c4_Hex, int c4_Hex_len,
            [out, size=m_bytes_len] uint8_t *m_bytes, int m_bytes_len);
        
        public sgx_status_t t_SaveShareFile(
            [in, size=share_id_len] uint8_t *share_id, int share_id_len, 
            [in, size=file_id_len] uint8_t *file_id, int file_id_len, 
            [in, size=file_name_len] uint8_t *file_name, int file_name_len, 
            [in, size=C_rk_len] uint8_t *C_rk, int C_rk_len, 
            [in, size=CDEK_rk_C1_len] uint8_t *CDEK_rk_C1, int CDEK_rk_C1_len, 
            [in, size=CDEK_rk_C2_len] uint8_t *CDEK_rk_C2, int CDEK_rk_C2_len, 
            [in, size=CDEK_rk_C3_len] uint8_t *CDEK_rk_C3, int CDEK_rk_C3_len, 
            [in, size=CDEK_rk_C4_len] uint8_t *CDEK_rk_C4, int CDEK_rk_C4_len, 
            [in, size=Cert_owner_info_len] uint8_t *Cert_owner_info, int Cert_owner_info_len, 
            [in, size=Cert_owner_info_sign_value_len] uint8_t *Cert_owner_info_sign_value, int Cert_owner_info_sign_value_len,
            [in, size=owner_grant_info_len] uint8_t *owner_grant_info, int owner_grant_info_len,
            [in, size=owner_grant_info_sign_value_len] uint8_t *owner_grant_info_sign_value, int owner_grant_info_sign_value_len);
        public uint32_t t_get_sealed_shareFileList_data_size();
        public sgx_status_t t_seal_shareFileList_data([out, size=data_size] uint8_t* sealed_blob, uint32_t data_size);
        public sgx_status_t t_unseal_shareFileList_data([in, size=data_size] const uint8_t *sealed_blob, size_t data_size);

    };

    untrusted {
    
        /*
         * [user_check|in|out|in,out|isary] can also be used in OCALLs, refer to the "User Guide" for details.
         */

    };

};
